{
	"name": "moviesDBconditionalsplit",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "moviesdbip",
						"type": "DatasetReference"
					},
					"name": "moviesDBcsv"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "moviesdbout",
						"type": "DatasetReference"
					},
					"name": "before1960"
				},
				{
					"dataset": {
						"referenceName": "moviesdbout",
						"type": "DatasetReference"
					},
					"name": "after1980"
				},
				{
					"dataset": {
						"referenceName": "moviesdbout",
						"type": "DatasetReference"
					},
					"name": "allother"
				}
			],
			"transformations": [
				{
					"name": "splitonyear"
				}
			],
			"scriptLines": [
				"source(output(",
				"          movie as string,",
				"          title as string,",
				"          genres as string,",
				"          year as integer,",
				"          Rating as string,",
				"          {Rotton Tomato} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> moviesDBcsv",
				"moviesDBcsv split(year<1960,",
				"     year>1980,",
				"     disjoint: false) ~> splitonyear@(moviesBefore1960, moviesafter1980, allothermovies)",
				"splitonyear@moviesBefore1960 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> before1960",
				"splitonyear@moviesafter1980 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> after1980",
				"splitonyear@allothermovies sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> allother"
			]
		}
	}
}