{
	"name": "moviesDBderivedcoln",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "moviesdbip",
						"type": "DatasetReference"
					},
					"name": "moviesdbcsv"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "moviesdbout",
						"type": "DatasetReference"
					},
					"name": "derivedcolnsink"
				}
			],
			"transformations": [
				{
					"name": "primarygenres"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          movie as string,",
				"          title as string,",
				"          genres as string,",
				"          year as string,",
				"          Rating as string,",
				"          {Rotton Tomato} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> moviesdbcsv",
				"moviesdbcsv derive({primary genre} = iif(locate('|',genres)>1,left(genres,locate('|',genres)-1),genres)) ~> primarygenres",
				"primarygenres select(mapColumn(",
				"          movie,",
				"          title,",
				"          genres,",
				"          year,",
				"          Rating,",
				"          {Rotten Tomato} = {Rotton Tomato},",
				"          {primary genre}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['moviesdbderivedcoln'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> derivedcolnsink"
			]
		}
	}
}